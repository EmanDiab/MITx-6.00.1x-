#problem 1

def getWordScore(word, n):
    """
    Returns the score for a word. Assumes the word is a valid word.

    The score for a word is the sum of the points for letters in the
    word, multiplied by the length of the word, PLUS 50 points if all n
    letters are used on the first turn.

    Letters are scored as in Scrabble; A is worth 1, B is worth 3, C is
    worth 3, D is worth 2, E is worth 1, and so on (see SCRABBLE_LETTER_VALUES)

    word: string (lowercase letters)
    n: integer (HAND_SIZE; i.e., hand size required for additional points)
    returns: int >= 0
    """
    Sum = 0
    for a in word :
        for b,w in SCRABBLE_LETTER_VALUES.items():
            if a == b :
                Sum = Sum + w
                n = n-1
    Sum = Sum * len(word)           
    if n == 0:
        Sum = Sum + 50
         
    return Sum 


#problem 2

def updateHand(hand, word):
    """
    Assumes that 'hand' has all the letters in word.
    In other words, this assumes that however many times
    a letter appears in 'word', 'hand' has at least as
    many of that letter in it. 

    Updates the hand: uses up the letters in the given word
    and returns the new hand, without those letters in it.

    Has no side effects: does not modify hand.

    word: string
    hand: dictionary (string -> int)    
    returns: dictionary (string -> int)
    """
    handplus = hand.copy()
    for a in word :
        for b in handplus.keys():
            if a == b :
                handplus[b]=handplus.get(b,0) - 1
    return handplus       


#problem 3

def isValidWord(word, hand, wordList):
    """
    Returns True if word is in the wordList and is entirely
    composed of letters in the hand. Otherwise, returns False.

    Does not mutate hand or wordList.
   
    word: string
    hand: dictionary (string -> int)
    wordList: list of lowercase strings
    """
    handplus = hand.copy()
    count = 0
    if word in wordList :
        for a in word:
            for k,v in handplus.items() :
                if a == k and v != 0 :
                    count = count +1
                    handplus[a] = handplus.get(a,0) - 1
            
        if count == len(word):
            if word in wordList:
                return True
            elif word == '':
                return False
        else:
            return False
    else :
        return False
        
        
        
#problem 4

def calculateHandlen(hand):
    """ 
    Returns the length (number of letters) in the current hand.
    
    hand: dictionary (string int)
    returns: integer
    """
    Sum = 0
    for v in hand.values():
        Sum = Sum + v
    return Sum 

#problem 5

def playHand(hand, wordList, n):
    """
    Allows the user to play the given hand, as follows:

    * The hand is displayed.
    * The user may input a word or a single period (the string ".") 
      to indicate they're done playing
    * Invalid words are rejected, and a message is displayed asking
      the user to choose another word until they enter a valid word or "."
    * When a valid word is entered, it uses up letters from the hand.
    * After every valid word: the score for that word is displayed,
      the remaining letters in the hand are displayed, and the user
      is asked to input another word.
    * The sum of the word scores is displayed when the hand finishes.
    * The hand finishes when there are no more unused letters or the user
      inputs a "."

      hand: dictionary (string -> int)
      wordList: list of lowercase strings
      n: integer (HAND_SIZE; i.e., hand size required for additional points)
      
    """
    # Keep track of the total score
    Score = 0
    total = 0
    
    # As long as there are still letters left in the hand:
        
        # Ask user for input
    while True:
        for v in hand.values():
            
            if v != 0:
                print("Current Hand: ",end ='')
                displayHand(hand)
                ans = input('Enter word, or a "." to indicate that you are finished: ')
        # If the input is a single period:
        # End the game (break out of the loop)
                if ans == "." :
                    print("Goodbye! Total score: "+str(total)+" points.")
                    print("\n")
                    break
        # Otherwise (the input is not a single period):
                else :
                    if not isValidWord(ans, hand,wordList):
                        print("Invalid word, please try again.")
                        print("\n")
                    elif isValidWord(ans, hand,wordList):
                        Score = getWordScore(ans, n)
                        total = total + Score
                        print('"'+ans+'" earned ' +str(Score)+ ' points. Total: '+str(total)+' points')
                        hand = updateHand(hand, ans)
                        print("\n")
                    if calculateHandlen(hand)== 0:
                        break
        if ans == "." :
            break
        if calculateHandlen(hand)== 0:
            print("\n")
            print("Run out of letters. Total score: "+ str(total)+" points.")
            print("\n")
            break



#problem 6

def playGame(wordList):
    """
    Allow the user to play an arbitrary number of hands.
 
    1) Asks the user to input 'n' or 'r' or 'e'.
      * If the user inputs 'n', let the user play a new (random) hand.
      * If the user inputs 'r', let the user play the last hand again.
      * If the user inputs 'e', exit the game.
      * If the user inputs anything else, tell them their input was invalid.
 
    2) When done playing the hand, repeat from step 1
    """
    hand={}
    while True :
        trial = 0
        ans = input("Enter n to deal a new hand, r to replay the last hand, or e to end game: ")
        if ans == "n" :
            hand = dealHand(HAND_SIZE)
            playHand(hand, wordList,HAND_SIZE)
        elif ans == "r" :
            if hand == {}:
                print("You have not played a hand yet. Please play a new hand first!")
            else:
                hand = hand
                playHand(hand, wordList,HAND_SIZE)
        elif ans == "e" :
            break
        else:
            print("Invalid command.")
#problem 7 

def playGame(wordList):
    """
    Allow the user to play an arbitrary number of hands.
 
    1) Asks the user to input 'n' or 'r' or 'e'.
        * If the user inputs 'e', immediately exit the game.
        * If the user inputs anything that's not 'n', 'r', or 'e', keep asking them again.

    2) Asks the user to input a 'u' or a 'c'.
        * If the user inputs anything that's not 'c' or 'u', keep asking them again.

    3) Switch functionality based on the above choices:
        * If the user inputted 'n', play a new (random) hand.
        * Else, if the user inputted 'r', play the last hand again.
          But if no hand was played, output "You have not played a hand yet. 
          Please play a new hand first!"
        
        * If the user inputted 'u', let the user play the game
          with the selected hand, using playHand.
        * If the user inputted 'c', let the computer play the 
          game with the selected hand, using compPlayHand.

    4) After the computer or user has played the hand, repeat from step 1

    wordList: list (string)
    """
    hand={}
    ans = ""
    ans2 = ""
    while ans != "e" or ans != "n" or ans != "r" :
        ans = input("Enter n to deal a new hand, r to replay the last hand, or e to end game: ")
        print("\n")
        if ans == 'r' and hand == {}:
            print("You have not played a hand yet. Please play a new hand first!")
            print("\n")
        elif ans == 'n':    
            while ans2 != "u" or ans2 != "c":
                ans2 = input("Enter u to have yourself play, c to have the computer play: ")
                print("\n")
                if ans2 == "u" :
                    hand = dealHand(HAND_SIZE)
                    playHand(hand, wordList, HAND_SIZE)
                    break
                elif ans2 == "c" :
                    hand = dealHand(HAND_SIZE)
                    compPlayHand(hand, wordList, HAND_SIZE)
                    break
                else :
                    print("Invalid command.")
                    print("\n")
        elif ans == 'r':
            while ans2 != "u" or ans2 != "c" :
                ans2 = input("Enter u to have yourself play, c to have the computer play: ")
                print("\n")
                if ans2 == "u" :
                        hand = hand
                        playHand(hand, wordList,HAND_SIZE)
                        break
                elif ans2 == "c" :
                        hand = hand
                        compPlayHand(hand, wordList, HAND_SIZE)
                        break
                else :
                    print("Invalid command.")
                    print("\n")    
            
        elif ans == 'e' :
            break
        else :
            print("Invalid command.")
            print("\n")
